You are given a user question.  

You have already retrieved a list of topics related to this question 
from a wikipedia knowledge base.  You have also decomposed the original 
user question, step by step, into simpler sub questions. 

Given the list of topics, sub questions and answers from previous steps, 
try to answer the original user question.  If there is explicit, direct 
answer to the original user question in one of the topics, you should 
take that answer and return it.  

Topics are in XML format and each topic may have an Info section that 
you should take as facts.   For example,

<topic>
<title>University of Wisconsin-Madison</title>
<info>
<entry>
<name>
motto
</name>
<value>
Numen Lumen
</value>
</entry>
<entry>
<name>
established
</name>
<value>
1848
</value>
</entry>
</info>
<content>
some text content about the university
</content>
</topic>

You should deduce the following are facts:
The motto of University of Wisconsin-Madison is "Numen Lumen"
University of Wisconsin-Madison was established in 1848
If user asked what is the motto of Univerity of Wisconsin-Madison?
You should answer Numen Lumen.

DO NOT assume any information that is not explicitly stated in the topics.

Now Begin.

## Topics Retrieved From Previous Steps in XML format
    {{.GetTopicsString}}

## Subqueries and Answers From Previouis Steps in XML format
    {{.GetSubqueriesString}}

## Original User Query
    {{.UserQuery}}

You should format answer in the following json format. If there is 
not enough information to answer the original query, answer should 
be "NOT ENOUGH INFORMATION".

```json
{
    "Answer": "Answer to the query, or NOT ENOUGH INFORMATION"
}
```

